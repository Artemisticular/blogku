---
import { Icon } from "astro-icon/components";
---

<div id="cart" class="fixed bottom-4 right-4 z-50">
  <button 
    id="cart-button"
    class="bg-blue-600 text-white p-4 rounded-full shadow-lg hover:bg-blue-700 transition-colors"
    aria-label="Shopping Cart"
  >
    <Icon name="fa6-solid:cart-shopping" class="w-6 h-6" />
    <span id="cart-count" class="absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm">
      0
    </span>
  </button>

  <div 
    id="cart-dropdown"
    class="hidden absolute bottom-16 right-0 w-80 bg-white rounded-lg shadow-xl p-4"
  >
    <h3 class="text-lg font-semibold mb-4">Shopping Cart</h3>
    <div id="cart-items" class="space-y-4">
      <!-- Cart items will be inserted here -->
    </div>
    <div class="border-t mt-4 pt-4">
      <div class="flex justify-between font-semibold">
        <span>Total:</span>
        <span id="cart-total">$0.00</span>
      </div>
      <button 
        id="checkout-button"
        class="w-full mt-4 bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition-colors"
      >
        Checkout
      </button>
    </div>
  </div>
</div>

<script>
  let cart = JSON.parse(localStorage.getItem('cart') || '[]');
  const cartButton = document.getElementById('cart-button');
  const cartDropdown = document.getElementById('cart-dropdown');
  const cartCount = document.getElementById('cart-count');
  const cartItems = document.getElementById('cart-items');
  const cartTotal = document.getElementById('cart-total');
  const checkoutButton = document.getElementById('checkout-button');

  // Toggle cart dropdown
  cartButton?.addEventListener('click', () => {
    cartDropdown?.classList.toggle('hidden');
    updateCart();
  });

  // Close cart when clicking outside
  document.addEventListener('click', (e) => {
    if (!cartButton?.contains(e.target as Node) && !cartDropdown?.contains(e.target as Node)) {
      cartDropdown?.classList.add('hidden');
    }
  });

  function updateCart() {
    if (!cartCount || !cartItems || !cartTotal) return;

    // Update cart count
    cartCount.textContent = cart.length.toString();

    // Clear cart items
    cartItems.innerHTML = '';

    // Add items to cart
    let total = 0;
    cart.forEach((productId: string) => {
      // In a real app, you would fetch product details from your backend
      const product = {
        id: productId,
        name: `Product ${productId}`,
        price: 29.99
      };

      total += product.price;

      const item = document.createElement('div');
      item.className = 'flex justify-between items-center';
      item.innerHTML = `
        <span>${product.name}</span>
        <div class="flex items-center gap-2">
          <span>$${product.price.toFixed(2)}</span>
          <button 
            class="text-red-500 hover:text-red-700"
            data-remove-id="${product.id}"
          >
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>
      `;
      cartItems.appendChild(item);
    });

    // Update total
    cartTotal.textContent = `$${total.toFixed(2)}`;
  }

  // Remove items from cart
  cartItems?.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    const removeButton = target.closest('[data-remove-id]');
    if (removeButton) {
      const productId = removeButton.getAttribute('data-remove-id');
      cart = cart.filter((id: string) => id !== productId);
      localStorage.setItem('cart', JSON.stringify(cart));
      updateCart();
    }
  });

  // Checkout button
  checkoutButton?.addEventListener('click', () => {
    if (cart.length === 0) {
      alert('Your cart is empty!');
      return;
    }
    // In a real app, this would redirect to a checkout page
    alert('Proceeding to checkout...');
  });

  // Initial cart update
  updateCart();
</script> 